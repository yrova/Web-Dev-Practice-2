{"version":3,"sources":["components/FilterNumbers.js","services/phonenumbers.js","components/AddEntry.js","components/DisplayNumbers.js","components/messages/Notification.js","App.js","index.js"],"names":["FilterNumbers","setNewFilter","onChange","event","target","value","toLowerCase","baseUrl","axios","get","newObject","post","then","response","data","id","put","delete","console","log","AddEntry","persons","setPersons","setMessage","useState","newName","setNewName","newPhoneNumber","setNewPhoneNumber","onSubmit","preventDefault","every","person","name","trim","nameObj","number","length","map","reduce","p","c","numService","message","type","setTimeout","concat","formatName","window","confirm","find","changedNumber","returnedNumber","catch","error","filter","handleDuplicateUpdate","Name","onClick","numServices","DisplayNumbers","filterBy","applyFilter","startsWith","key","notificationStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","errorStyle","Notification","styleType","className","style","App","useEffect","numberService","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d682f93.chunk.js","sourcesContent":["import React from \"react\";\n\nconst FilterNumbers = ({ setNewFilter }) => {\n  const handleFilterChange = event => {\n    setNewFilter(event.target.value.toLowerCase());\n  };\n  return (\n    <div>\n      <form>\n        <div>\n          filter shown with\n          <input onChange={handleFilterChange} />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default FilterNumbers;\n","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request;\n};\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\n\nconst deleteNum = id => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then(response => {\n    console.log(`Delete Success for number with id: ${id}`);\n  });\n};\n\nexport default { getAll, create, update, deleteNum };\n","import React, { useState } from \"react\";\nimport numService from \"../services/phonenumbers\";\n\nconst AddEntry = ({ persons, setPersons, setMessage }) => {\n  const [newName, setNewName] = useState(\"\");\n  const [newPhoneNumber, setNewPhoneNumber] = useState(\"\");\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handlePhoneNumberChange = event => {\n    setNewPhoneNumber(event.target.value);\n  };\n\n  const handleDuplicateUpdate = () => {\n    const formatName = newName.trim();\n    const message = `${formatName} is already added to the phonebook, replace the old number with a new one?`;\n    if (window.confirm(message)) {\n      const number = persons.find(person => person.name === newName);\n      const changedNumber = { ...number, number: newPhoneNumber };\n\n      numService\n        .update(changedNumber.id, changedNumber)\n        .then(returnedNumber => {\n          setMessage({\n            message: `Changed Number for ${formatName}`,\n            type: true\n          });\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n          setPersons(\n            persons.map(person =>\n              person.id !== changedNumber.id ? person : returnedNumber\n            )\n          );\n        })\n        .catch(error => {\n          setMessage({\n            message: `Information of ${formatName} has already been removed from the server `,\n            type: false\n          });\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n          setPersons(persons.filter(person => person.id !== number.id));\n        });\n    }\n  };\n\n  //Returns true if array has a duplicate name, false otherwise\n  const hasDuplicate = () =>\n    !persons.every(\n      person =>\n        person.name.toLowerCase().trim() !== newName.toLowerCase().trim()\n    );\n\n  const addUserInfo = event => {\n    event.preventDefault();\n    if (hasDuplicate()) {\n      handleDuplicateUpdate();\n    } else {\n      //Retrieves biggest id value from the json server,otherwise return 0\n      const generateId = () => {\n        return persons.length === 0\n          ? 0\n          : persons\n              .map(person => person.id)\n              .reduce((p, c) => (p.value > c.value ? p : c));\n      };\n\n      const nameObj = {\n        name: newName,\n        number: newPhoneNumber,\n        id: generateId() + 1 //increment biggest value by one for a unique id\n      };\n\n      numService.create(nameObj).then(data => {\n        setMessage({\n          message: `Added ${data.name}`,\n          type: true\n        });\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n        setPersons(persons.concat(data));\n        setNewName(\"\");\n        setNewPhoneNumber(\"\");\n      });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Numbers</h2>\n      <form onSubmit={addUserInfo}>\n        <div>\n          name:\n          <input value={newName} onChange={handleNameChange} />\n        </div>\n        <div>\n          number:\n          <input value={newPhoneNumber} onChange={handlePhoneNumberChange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default AddEntry;\n","import React from \"react\";\nimport numServices from \"../services/phonenumbers\";\n\nconst DisplayNumbers = ({ persons, filterBy, setPersons }) => {\n  const applyFilter = !filterBy\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().startsWith(filterBy));\n\n  const rows = () =>\n    applyFilter.map(person => (\n      <Name\n        key={person.id}\n        person={person}\n        setPersons={setPersons}\n        persons={persons}\n      />\n    ));\n\n  return (\n    <div>\n      <h2>Numbers</h2>\n      <table>\n        <tbody>{rows()}</tbody>\n      </table>\n    </div>\n  );\n};\n\nconst Name = ({ person, setPersons, persons }) => {\n  const { name, number, id } = person;\n  const deleteNumber = () => {\n    if (window.confirm(`Do you really want to delete ${name}'s number?`)) {\n      numServices.deleteNum(id).then(response => {\n        setPersons(persons.filter(person => person.name !== name));\n      });\n    }\n  };\n\n  return (\n    <tr>\n      <td>\n        {name} {number} <button onClick={deleteNumber}>delete</button>\n      </td>\n    </tr>\n  );\n};\n\nexport default DisplayNumbers;\n","import React from \"react\";\n\nconst Notification = ({ message }) => {\n  if (message === null || message.message === null || message.type === null) {\n    return null;\n  }\n\n  // Change css based on style type:  Type: True = Green Box, False = Red Box\n  const styleType = message.type ? notificationStyle : errorStyle;\n\n  return (\n    <div className=\"error\" style={styleType}>\n      {message.message}\n    </div>\n  );\n};\n\nconst notificationStyle = {\n  color: \"green\",\n  background: \"lightgrey\",\n  fontSize: 20,\n  borderStyle: \"solid\",\n  borderRadius: 5,\n  padding: 10,\n  marginBottom: 10\n};\n\nconst errorStyle = {\n  color: \"red\",\n  background: \"lightgrey\",\n  fontSize: 20,\n  borderStyle: \"solid\",\n  borderRadius: 5,\n  padding: 10,\n  marginBottom: 10\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport FilterNumbers from \"./components/FilterNumbers\";\nimport AddEntry from \"./components/AddEntry\";\nimport DisplayNumbers from \"./components/DisplayNumbers\";\nimport numberService from \"./services/phonenumbers\";\nimport Notification from \"./components/messages/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [filterBy, setNewFilter] = useState(\"\");\n  const [message, setMessage] = useState({\n    message: null,\n    type: null //true = green box, false = red box\n  });\n\n  useEffect(() => {\n    numberService.getAll().then(response => {\n      setPersons(response.data);\n    });\n  }, []);\n\n  return (\n    <div>\n      <h2>PhoneBook</h2>\n      <Notification message={message} />\n      <FilterNumbers setNewFilter={setNewFilter} />\n      <AddEntry\n        persons={persons}\n        setPersons={setPersons}\n        setMessage={setMessage}\n      />\n      <DisplayNumbers\n        persons={persons}\n        filterBy={filterBy}\n        setPersons={setPersons}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}